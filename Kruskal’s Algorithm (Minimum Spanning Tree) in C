#include <stdio.h>
#define MAX 30

int parent[MAX];

int find(int i) {
    while (parent[i]) i = parent[i];
    return i;
}

int uni(int i, int j) {
    if ((i = find(i)) != (j = find(j))) {
        parent[j] = i;
        return 1;
    }
    return 0;
}

int main() {
    int n = 4;
    int cost[4][4] = {
        {999, 1, 3, 999},
        {1, 999, 1, 6},
        {3, 1, 999, 2},
        {999, 6, 2, 999}
    };

    int edges = 0, min, a, b, u, v;
    int total = 0;

    while (edges < n - 1) {
        min = 999;
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                if (cost[i][j] < min) {
                    min = cost[i][j];
                    a = u = i;
                    b = v = j;
                }

        if (uni(u, v)) {
            printf("Edge %d: (%d - %d) = %d\n", edges + 1, a, b, min);
            total += min;
            edges++;
        }

        cost[a][b] = cost[b][a] = 999;
    }

    printf("Total cost of MST = %d\n", total);
    return 0;
}
