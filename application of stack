#include <stdio.h>
#include <ctype.h>

#define SIZE 100

char stack[SIZE];
int top = -1;

void push(char c) {
    stack[++top] = c;
}

char pop() {
    return stack[top--];
}

int precedence(char op) {
    if(op == '^') return 3;
    if(op == '*' || op == '/') return 2;
    if(op == '+' || op == '-') return 1;
    return 0;
}

void infixToPostfix(char* infix) {
    char postfix[SIZE];
    int i = 0, j = 0;
    char ch;

    while((ch = infix[i++]) != '\0') {
        if(isalnum(ch))
            postfix[j++] = ch;
        else if(ch == '(')
            push(ch);
        else if(ch == ')') {
            while(stack[top] != '(')
                postfix[j++] = pop();
            pop(); // Remove '('
        }
        else {
            while(top != -1 && precedence(stack[top]) >= precedence(ch))
                postfix[j++] = pop();
            push(ch);
        }
    }

    while(top != -1)
        postfix[j++] = pop();

    postfix[j] = '\0';
    printf("Postfix: %s\n", postfix);
}

int main() {
    char exp[SIZE];
    printf("Enter infix expression: ");
    scanf("%s", exp);
    infixToPostfix(exp);
    return 0;
}
